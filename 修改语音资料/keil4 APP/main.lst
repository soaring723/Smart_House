C51 COMPILER V9.00   MAIN                                                                  04/17/2022 19:38:57 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\obj\main.obj
COMPILER INVOKED BY: D:\嵌入式\嵌入式VIP\C51\BIN\C51.EXE ..\code\main.c BROWSE INCDIR(..\code;..\user) DEBUG OBJECTEXTEN
                    -D PRINT(.\main.lst) OBJECT(..\obj\main.obj)

line level    source

   1          /***************************飞音云电子****************************
   2          **  工程名称：YS-V0.7语音识别模块驱动程序
   3          **      CPU: STC11L08XE
   4          **      晶振：22.1184MHZ
   5          **      波特率：9600 bit/S
   6          **      配套产品信息：YS-V0.7语音识别开发板
   7          **                http://yuesheng001.taobao.com
   8          **  作者：zdings
   9          **  联系：751956552@qq.com
  10          **  修改日期：2013.9.13
  11          **  说明：口令模式： 即每次识别时都需要说“小杰”这个口令 ，才能够进行下一级的识别
  12          /***************************飞音云电子******************************/
  13          #include "config.h"
  14          /************************************************************************************/
  15          //      nAsrStatus 用来在main主程序中表示程序运行的状态，不是LD3320芯片内部的状态寄存器
  16          //      LD_ASR_NONE:            表示没有在作ASR识别
  17          //      LD_ASR_RUNING：         表示LD3320正在作ASR识别中
  18          //      LD_ASR_FOUNDOK:         表示一次识别流程结束后，有一个识别结果
  19          //      LD_ASR_FOUNDZERO:       表示一次识别流程结束后，没有识别结果
  20          //      LD_ASR_ERROR:           表示一次识别流程中LD3320芯片内部出现不正确的状态
  21          /***********************************************************************************/
  22          
  23          uint8 idata nAsrStatus=0;       
  24          void MCU_init(); 
  25          void ProcessInt0(); //识别处理函数
  26          void delay(unsigned long uldata);
  27          void User_handle(uint8 dat);//用户执行操作函数
  28          void Delay200ms();
  29          void Led_test(void);//单片机工作指示
  30          uint8_t G0_flag=DISABLE;//运行标志，ENABLE:运行。DISABLE:禁止运行 
  31          sbit LED=P4^2;//信号指示灯
  32          
  33          /***********************************************************
  34          * 名    称： void  main(void)
  35          * 功    能： 主函数     程序入口
  36          * 入口参数：  
  37          * 出口参数：
  38          * 说    明：                                     
  39          * 调用方法： 
  40          **********************************************************/ 
  41          void  main(void)
  42          {
  43   1              uint8 idata nAsrRes;
  44   1              uint8 i=0;
  45   1              Led_test();
  46   1              MCU_init();
  47   1              LD_Reset();
  48   1              UartIni(); /*串口初始化*/
  49   1              nAsrStatus = LD_ASR_NONE;               //      初始状态：没有在作ASR
  50   1              
  51   1              #ifdef TEST     
                  PrintCom("一级口令：小杰\r\n"); /*text.....*/
                      PrintCom("二级口令：1、代码测试\r\n"); /*text.....*/
                      PrintCom("      2、开发板验证\r\n"); /*text.....*/
C51 COMPILER V9.00   MAIN                                                                  04/17/2022 19:38:57 PAGE 2   

                      PrintCom("      3、开灯\r\n"); /*text.....*/
                      PrintCom("      4、关灯\r\n"); /*text.....*/
                      PrintCom("  5、北京\r\n"); /*text.....*/
                      PrintCom("      6、上海\r\n"); /*text.....*/
                      PrintCom("      7、广州\r\n"); /*text.....*/
                      #endif
  61   1      
  62   1              while(1)
  63   1              {
  64   2                      switch(nAsrStatus)
  65   2                      {
  66   3                              case LD_ASR_RUNING:
  67   3                              case LD_ASR_ERROR:              
  68   3                                      break;
  69   3                              case LD_ASR_NONE:
  70   3                              {
  71   4                                      nAsrStatus=LD_ASR_RUNING;
  72   4                                      if (RunASR()==0)        /*      启动一次ASR识别流程：ASR初始化，ASR添加关键词语，启动ASR运算*/
  73   4                                      {
  74   5                                              nAsrStatus = LD_ASR_ERROR;
  75   5                                      }
  76   4                                      break;
  77   4                              }
  78   3                              case LD_ASR_FOUNDOK: /* 一次ASR识别流程结束，去取ASR识别结果*/
  79   3                              {                               
  80   4                                      nAsrRes = LD_GetResult();               /*获取结果*/
  81   4                                      User_handle(nAsrRes);//用户执行函数 
  82   4                                      nAsrStatus = LD_ASR_NONE;
  83   4                                      break;
  84   4                              }
  85   3                              case LD_ASR_FOUNDZERO:
  86   3                              default:
  87   3                              {
  88   4                                      nAsrStatus = LD_ASR_NONE;
  89   4                                      break;
  90   4                              }
  91   3                      }// switch                              
  92   2              }// while
  93   1      
  94   1      }
  95          /***********************************************************
  96          * 名    称：     LED灯测试
  97          * 功    能： 单片机是否工作指示
  98          * 入口参数： 无 
  99          * 出口参数：无
 100          * 说    明：                                     
 101          **********************************************************/
 102          void Led_test(void)
 103          {
 104   1              LED=~ LED;
 105   1              Delay200ms();
 106   1              LED=~ LED;
 107   1              Delay200ms();
 108   1              LED=~ LED;
 109   1              Delay200ms();
 110   1              LED=~ LED;
 111   1              Delay200ms();
 112   1              LED=~ LED;
 113   1              Delay200ms();
 114   1              LED=~ LED;
 115   1      }
 116          /***********************************************************
C51 COMPILER V9.00   MAIN                                                                  04/17/2022 19:38:57 PAGE 3   

 117          * 名    称： void MCU_init()
 118          * 功    能： 单片机初始化
 119          * 入口参数：  
 120          * 出口参数：
 121          * 说    明：                                     
 122          * 调用方法： 
 123          **********************************************************/ 
 124          void MCU_init()
 125          {
 126   1              P0 = 0xff;
 127   1              P1 = 0xff;
 128   1              P2 = 0xff;
 129   1              P3 = 0xff;
 130   1              P4 = 0xff;
 131   1              
 132   1      
 133   1              LD_MODE = 0;            //      设置MD管脚为低，并行模式读写
 134   1              IE0=1;
 135   1              EX0=1;
 136   1              EA=1;
 137   1      }
 138          /***********************************************************
 139          * 名    称：    延时函数
 140          * 功    能：
 141          * 入口参数：  
 142          * 出口参数：
 143          * 说    明：                                     
 144          * 调用方法： 
 145          **********************************************************/ 
 146          void Delay200us()               //@22.1184MHz
 147          {
 148   1              unsigned char i, j;
 149   1              _nop_();
 150   1              _nop_();
 151   1              i = 5;
 152   1              j = 73;
 153   1              do
 154   1              {
 155   2                      while (--j);
 156   2              } while (--i);
 157   1      }
 158          
 159          void  delay(unsigned long uldata)
 160          {
 161   1              unsigned int j  =  0;
 162   1              unsigned int g  =  0;
 163   1              while(uldata--)
 164   1              Delay200us();
 165   1      }
 166          
 167          void Delay200ms()               //@22.1184MHz
 168          {
 169   1              unsigned char i, j, k;
 170   1      
 171   1              i = 17;
 172   1              j = 208;
 173   1              k = 27;
 174   1              do
 175   1              {
 176   2                      do
 177   2                      {
 178   3                              while (--k);
C51 COMPILER V9.00   MAIN                                                                  04/17/2022 19:38:57 PAGE 4   

 179   3                      } while (--j);
 180   2              } while (--i);
 181   1      }
 182          
 183          /***********************************************************
 184          * 名    称： 中断处理函数
 185          * 功    能：
 186          * 入口参数：  
 187          * 出口参数：
 188          * 说    明：                                     
 189          * 调用方法： 
 190          **********************************************************/ 
 191          void ExtInt0Handler(void) interrupt 0  
 192          {       
 193   1              ProcessInt0();                          
 194   1      }
 195          /***********************************************************
 196          * 名    称：用户执行函数 
 197          * 功    能：识别成功后，执行动作可在此进行修改 
 198          * 入口参数： 无 
 199          * 出口参数：无
 200          * 说    明：                                     
 201          **********************************************************/
 202          void    User_handle(uint8 dat)
 203          {
 204   1           /*UARTSendByte(dat);//串口识别码（十六进制）
 205   1                      // if(0==dat)
 206   1                      // {
 207   1                       //     G0_flag=ENABLE;
 208   1                      //      LED=0;
 209   1                      //      PrintCom("收到\r\n"); /*text.....*/
 210   1                      /*} 
 211   1                       else if(ENABLE==G0_flag)
 212   1                       {      
 213   1                                      G0_flag=DISABLE;
 214   1                                      LED=1; */
 215   1                               switch(dat)               /*对结果执行相关操作,客户可删除Printcom 串口输出语句替换为其他需要控制的代码*/
 216   1                                {
 217   2                                        case CODE_CMD:                        /*命令“测试”*/
 218   2                                                      PrintCom("receive\r\n"); /*text.....*/
 219   2                                                                                                               break;
 220   2                                              case CODE_kysd:  /*命令“全开”*/
 221   2                                                      PrintCom("kysd\r\n"); /*text.....*/
 222   2                                                                                                               break;
 223   2                                              case CODE_gysd:         /*命令“复位”*/                                
 224   2                                                      PrintCom("gysd\r\n"); /*text.....*/
 225   2                                                                                                              break;
 226   2                                              case CODE_kwsd:         /*命令“复位”*/                                
 227   2                                                      PrintCom("kwsd\r\n"); /*text.....*/
 228   2                                                                                                              break;
 229   2                                              case CODE_gwsd:         /*命令“复位”*/                                
 230   2                                                      PrintCom("gwsd\r\n"); /*text.....*/
 231   2                                                                                                              break;
 232   2                                              case CODE_kktd:         /*命令“复位”*/                                
 233   2                                                      PrintCom("kktd\r\n"); /*text.....*/
 234   2                                                                                                              break;
 235   2                                              case CODE_gktd:         /*命令“复位”*/                                
 236   2                                                      PrintCom("gktd\r\n"); /*text.....*/
 237   2                                                                                                              break;
 238   2                                              case CODE_kctd:         /*命令“复位”*/                                
 239   2                                                      PrintCom("kctd\r\n"); /*text.....*/
 240   2                                                                                                              break;
C51 COMPILER V9.00   MAIN                                                                  04/17/2022 19:38:57 PAGE 5   

 241   2                                              case CODE_gctd:         /*命令“复位”*/                                
 242   2                                                      PrintCom("gctd\r\n"); /*text.....*/
 243   2                                                                                                              break;  
 244   2                                              case CODE_kqbd:         /*命令“复位”*/                                
 245   2                                                      PrintCom("kqbd\r\n"); /*text.....*/
 246   2                                                                                                              break;
 247   2                                              case CODE_gqbd:         /*命令“复位”*/                                
 248   2                                                      PrintCom("gqbd\r\n"); /*text.....*/
 249   2                                                                                                              break;  
 250   2                                              case CODE_kycd:         /*命令“复位”*/                                
 251   2                                                      PrintCom("kycd\r\n"); /*text.....*/
 252   2                                                                                                              break;  
 253   2                                              case CODE_gycd:         /*命令“复位”*/                                
 254   2                                                      PrintCom("gycd\r\n"); /*text.....*/
 255   2                                                                                                              break;
 256   2                                              case CODE_ks:           /*命令“复位”*/                                
 257   2                                                      PrintCom("ks\r\n"); /*text.....*/
 258   2                                                                                                              break;  
 259   2                                              case CODE_kdfs:         /*命令“复位”*/                                
 260   2                                                      PrintCom("kdfs\r\n"); /*text.....*/
 261   2                                                                                                              break;  
 262   2                                              case CODE_gdfs:         /*命令“复位”*/                                
 263   2                                                      PrintCom("gdfs\r\n"); /*text.....*/
 264   2                                                                                                              break
 265   2                                                              default:PrintCom("请重新识别发口令\r\n"); /*text.....*/break;
 266   2                                      }       
 267   1                      /*      }       
 268   1                              else    
 269   1                              {
 270   1                                      PrintCom("请说出一级口令\r\n"); /*text.....*/   
 271   1                      /*      }       */
 272   1      }        


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    438    ----
   CONSTANT SIZE    =    132    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       9
   IDATA SIZE       =      1       1
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
